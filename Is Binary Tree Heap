int countNodes(struct Node* tree){
        if(tree==NULL)
        return 0;
        int cnt=1+countNodes(tree->left)+countNodes(tree->right);
        return cnt;
    }
    bool isCBT(struct Node* root,int i,int cnt){
        if(root == NULL)
        return true;
        if(i >=cnt)
         return false;
        else
        {
            bool left=isCBT(root->left,2*i+1,cnt);
            bool right=isCBT(root->right,2*i+2,cnt);
            return (left && right);
        }
    }
    bool maxHeap(struct Node* root){
        if(root->left==NULL && root->right==NULL)
        return true;
        else if(root->right==NULL){
            return (root->data > root->left->data);
           }
        else
        {
            bool left=maxHeap(root->left);
            bool right=maxHeap(root->right);
            return (left && right && (root->data > root->left->data && root->data > root->right->data));
        }
        
    }
    bool isHeap(struct Node* tree) {
        int cnt=countNodes(tree);
        int i=0;
        return (isCBT(tree,i,cnt) && maxHeap(tree));
    }
