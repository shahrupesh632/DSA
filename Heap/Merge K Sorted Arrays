#include <bits/stdc++.h> 
class Node{
    public:
    int data;
    int i;
    int j;
    Node(int data,int row,int col){
         this->data=data;
        i=row;
        j=col;
    }
};
class Compare{
    public:
    bool operator()(Node* a,Node* b){
        return a->data > b->data;
    }
};
vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    vector<int> ans;
    priority_queue<Node*,vector<Node*>,Compare> minHeap;
    for(int i=0;i<k;i++){
        Node* tmp=new Node(kArrays[i][0],i,0);
        minHeap.push(tmp);
    }
    while(!minHeap.empty()){
        Node* tmp=minHeap.top();
        minHeap.pop();
        int i=tmp->i;
        int j=tmp->j;
        ans.push_back(tmp->data);
        if(kArrays[i].size() > j+1){
            Node* next=new Node(kArrays[i][j+1],i,j+1);
            minHeap.push(next);
        }
}
    return ans;
}
